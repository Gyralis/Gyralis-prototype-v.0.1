/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    FacetRegistry: {
      address: "0x2c4b93b614ddbfaf0807e8f4ca982e9f9c2e2aa4",
      abi: [
        {
          type: "function",
          name: "addFacet",
          inputs: [
            {
              name: "facet",
              type: "address",
              internalType: "address",
            },
            {
              name: "selectors",
              type: "bytes4[]",
              internalType: "bytes4[]",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "computeFacetAddress",
          inputs: [
            {
              name: "salt",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "creationCode",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "facet",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "deployFacet",
          inputs: [
            {
              name: "salt",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "creationCode",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "selectors",
              type: "bytes4[]",
              internalType: "bytes4[]",
            },
          ],
          outputs: [
            {
              name: "facet",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "facetAddresses",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "facetSelectors",
          inputs: [
            {
              name: "facet",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4[]",
              internalType: "bytes4[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "removeFacet",
          inputs: [
            {
              name: "facet",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "FacetRegistered",
          inputs: [
            {
              name: "facet",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "selectors",
              type: "bytes4[]",
              indexed: false,
              internalType: "bytes4[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FacetUnregistered",
          inputs: [
            {
              name: "facet",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "Create2EmptyBytecode",
          inputs: [],
        },
        {
          type: "error",
          name: "FacetRegistry_FacetAddressZero",
          inputs: [],
        },
        {
          type: "error",
          name: "FacetRegistry_FacetAlreadyRegistered",
          inputs: [],
        },
        {
          type: "error",
          name: "FacetRegistry_FacetMustHaveSelectors",
          inputs: [],
        },
        {
          type: "error",
          name: "FacetRegistry_FacetNotContract",
          inputs: [],
        },
        {
          type: "error",
          name: "FacetRegistry_FacetNotRegistered",
          inputs: [],
        },
        {
          type: "error",
          name: "FailedDeployment",
          inputs: [],
        },
        {
          type: "error",
          name: "InsufficientBalance",
          inputs: [
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
      ],
      inheritedFunctions: {
        addFacet: "contracts/registry/IFacetRegistry.sol",
        computeFacetAddress: "contracts/registry/IFacetRegistry.sol",
        deployFacet: "contracts/registry/IFacetRegistry.sol",
        facetAddresses: "contracts/registry/IFacetRegistry.sol",
        facetSelectors: "contracts/registry/IFacetRegistry.sol",
        removeFacet: "contracts/registry/IFacetRegistry.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
